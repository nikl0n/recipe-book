generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  name      String   @id @db.VarChar(50)
  password  String   @db.VarChar(500)
  token     String   @unique(map: "token") @db.VarChar(500)
  timestamp DateTime @db.DateTime(0)
  recipe    recipe[]
}

model category {
  id     Int      @id @default(autoincrement())
  name   String   @db.VarChar(255)
  recipe recipe[]
}

model image {
  id        Int      @id @default(autoincrement())
  recipeId  Int
  base64    String   @db.LongText
  timestamp DateTime @db.DateTime(0)
  recipes   recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade, map: "image_ibfk_1")

  @@index([recipeId], map: "recipe_id")
}

model ingredient {
  id        Int      @id @default(autoincrement())
  recipeId  Int
  unitId    Int
  name      String   @db.VarChar(255)
  amount    Int
  timestamp DateTime @db.DateTime(0)
  recipes   recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade, map: "ingredient_ibfk_1")
  unit      unit     @relation(fields: [unitId], references: [id], onDelete: Cascade, map: "ingredient_ibfk_2")

  @@index([recipeId], map: "recipe_id")
  @@index([unitId], map: "unit_id")
}

model step {
  id        Int      @id @default(autoincrement())
  recipeId  Int
  order     Int
  text      String   @db.Text
  timestamp DateTime @db.DateTime(0)
  recipes   recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade, map: "step_ibfk_1")

  @@index([recipeId], map: "steps_ibfk_2")
}

model unit {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  ingredient ingredient[]
}

model recipe {
  id         Int          @id @default(autoincrement())
  userName   String       @db.VarChar(50)
  categoryId Int
  name       String       @db.VarChar(255)
  timestamp  DateTime     @db.DateTime(0)
  image      image[]
  ingredient ingredient[]
  category   category     @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "recipe_ibfk_1")
  user       user         @relation(fields: [userName], references: [name], onDelete: Cascade, map: "recipe_ibfk_2")
  step       step[]

  @@index([categoryId], map: "categoryId")
  @@index([userName], map: "userName")
}
